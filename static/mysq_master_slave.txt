rm -r /Users/jichuang/docker/mysql_master_slave/master/data/*
rm -r /Users/jichuang/docker/mysql_master_slave/slave/data/*
docker stop mysql_master mysql_slave
docker rm mysql_master mysql_slave

docker run -d -p 3310:3306 \
-v /Users/jichuang/docker/mysql_master_slave/master/data/:/var/lib/mysql \
-v /Users/jichuang/docker/mysql_master_slave/master/log/:/var/log/mysql \
-v /Users/jichuang/docker/mysql_master_slave/master/config/:/etc/mysql/conf.d \
--network mysql_master_slave_network \
--name mysql_master \
-e MYSQL_ROOT_PASSWORD=123456 \
mysql

cd /Users/jichuang/docker/mysql_master_slave/slave
docker run -d -p 3311:3306 \
-v /Users/jichuang/docker/mysql_master_slave/slave/data/:/var/lib/mysql \
-v /Users/jichuang/docker/mysql_master_slave/slave/log/:/var/log/mysql \
-v /Users/jichuang/docker/mysql_master_slave/slave/config/:/etc/mysql/conf.d \
--network mysql_master_slave_network \
--name mysql_slave \
-e MYSQL_ROOT_PASSWORD=123456 \
mysql


docker exec -it mysql_master /bin/bash
mysql -uroot -p123456

CREATE USER 'replication_user'@'%' IDENTIFIED BY '123456';
GRANT REPLICATION SLAVE ON *.* TO 'replication_user'@'%';
FLUSH PRIVILEGES;

SHOW MASTER STATUS;



docker exec -it mysql_slave /bin/bash
# 进入mysql
mysql -uroot -p123456
# 开启主从复制 MYSQL8.0以上版本
# 在从服务器上执行以下语句
# 是在主服务器上创建的相同用户。
CREATE USER 'replication_user'@'%' IDENTIFIED BY '123456';
GRANT REPLICATION SLAVE ON *.* TO 'replication_user'@'%';
FLUSH PRIVILEGES;

# 使用主服务器 SHOW MASTER STATUS; 返回的信息来配置从服务器
stop slave;
reset slave all;
CHANGE MASTER TO
  MASTER_HOST='mysql_master',
  MASTER_PORT=3306,
  MASTER_USER='replication_user',
  MASTER_PASSWORD='123456',
  MASTER_LOG_FILE='mysql-bin.000003',
  MASTER_LOG_POS=880,
  get_master_public_key=1;
  start slave;
# 启动从服务器的复制
start slave;
show slave status\G;


create database testdb;
use testdb;
create table tab(id int);
insert into tab(id)value(1);

select * from tab;

show slave status\G;
